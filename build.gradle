plugins {
            id 'java'
            id 'jacoco'                 // 자바 코드 커버리지 (-> 테스트 코드의 코드 커버리지에 대한 리포트를 작성할 수 있음)
            id 'java-test-fixtures'     // 재활용할 수 있는 fixture를 정의할 수 있음
            id 'org.springframework.boot' version '3.2.3'
            id 'io.spring.dependency-management' version '1.1.4'
            id 'io.freefair.lombok' version '8.4'
        }

group 'com.hyunbenny'
version '1.0-SNAPSHOT'

java {
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation(platform("org.junit:junit-bom:5.10.2"))      // Junit Aligning dependency versions
//    testImplementation("org.junit.jupiter:junit-jupiter")           // Junit Jupiter
//    testImplementation("org.junit.jupiter:junit-jupiter-params")    // Junit Jupiter extension for parameterized tests
//    testImplementation("org.mockito:mockito-core.5.7.0")            // Mockito core
//    testImplementation("org.mockito:mockito-junit-jupiter:5.7.0")   // Mockito extension
//    testImplementation("org.assertj:assertj-core:3.11.1")           // AssertJ
//    testImplementation("org.jayway.jsonpath:json-path:2.9.0")       // Jsonpath

    testRuntimeOnly 'com.h2database:h2'

    testFixturesImplementation 'org.springframework.boot:spring-boot-starter-test'
    testFixturesImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn(tasks.test)

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ["**/TestApplication.*"])
        }))
    }
}


// 통합 테스트를 위한 sourceSets
sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    integrationTestImplementation 'org.springframework.boot:spring-boot-starter-test'
    integrationTestRuntimeOnly 'com.h2database:h2'
}